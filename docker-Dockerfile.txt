Creating a docker image using a Dockerfile to load the program.

eg.
Create a temporary folder.
$ mkdir ~/my-simple-webapp
$ cd ~/my-simple-webapp
$ vi Dockerfile

FROM ubuntu
RUN apt-get update
RUN apt-get install -y python3 python3-setuptools python3-dev build-essential python3-pip python3-mysqldb
RUN pip3 install flask
RUN pip3 install flask-mysql
COPY app.py /opt/app.py     # This means copying the file from /opt into the image.
ENTRYPOINT FLASK_APP=/opt/app.py flask run --host=0.0.0.0

Assuming that the file /opt/app.py exist and the content of /opt/app.py is:

import os
from flask import Flask
app = Flask(__name__)

@app.route("/")
def main():
    return "Welcome! I'm Caven."

@app.route('/how are you')
def hello():
    return 'I am good, how about you?'

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)

$ pwd
~/my-simple-webapp$ docker build . -t my-simple-webapp


In a Dockerfile, the command at the end that starts the application is:
...
...
CMD ["mysqld"]